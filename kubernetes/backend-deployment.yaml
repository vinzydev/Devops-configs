api: application/v1
kind: Deployment
metadata:
  name: backend
  namespace: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: backend:latest
          ports:
            - containerPort: 8080
          env:
            - name: ENVIRONMENT
              value: development
            - name: DATABASE_URL
              value: http://database-service:5432
          resources:
            requests:
              memory: 256Mi
              cpu: 500m
            limits:
              memory: 512Mi
              cpu: '1'
      imagePullSecrets:
        - name: acrsecrets
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - backend
              topologyKey: kubernetes.io/hostname
      volumes:
        - name: backend-storage
          persistentVolumeClaim:
            claimName: backend-pvc
      volumeMounts:
        - name: backend-storage
          mountPath: /usr/src/app/data`